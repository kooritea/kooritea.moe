import{P as w}from"./xDxly3N35.js";import{_ as h,u as b,b as m,z as c,f as a,l as _,e as V,t as v,g as A,j as p,k as f}from"./assets/index-CvIYzVtv.js";const x={components:{PageHeader:w},setup(){const{isGreatOldOne:o}=b();return{isGreatOldOne:o}},data(){return{result:"",resultAutoLine:!1,formConfig:{labelPosition:"top"},formData:{},fields:[{type:"input",label:"key(默认就是这个，能解密就不用改)",prop:"key",defaultValue:()=>"hans_history_key"},{type:"input",label:"add(默认就是这个，能解密就不用改)",prop:"add",defaultValue:()=>"ADD"},{type:"upload",prop:"files",label:"文件",formProps:{multiple:!0,accept:".txt"},defaultValue:()=>[]}],buttons:[{type:"primary",label:"解密",handler:(o,t)=>(this.result="",o.formInstance.submitForm().then(async s=>{if(s.files.length===0){this.$message.warning("请先选择文件");return}for(const l of s.files){const e=await l.raw.text(),n=await this.decryptHansLog(e,s.key,s.add);this.result+=n}}).catch(s=>{this.$message.error("解密失败: "+s)}))}]}},methods:{async decryptHansLog(o,t,s=""){const l=t.substring(0,16),e=new TextEncoder().encode(l).slice(0,16),n=Uint8Array.from(atob(o),g=>g.charCodeAt(0)),i=new TextEncoder().encode(s),d=n.slice(-16),u=n.slice(0,-16),r=await window.crypto.subtle.importKey("raw",e,{name:"AES-GCM"},!1,["decrypt"]),y=await window.crypto.subtle.decrypt({name:"AES-GCM",iv:i,additionalData:new Uint8Array,tagLength:128},r,new Uint8Array([...u,...d]));return new TextDecoder().decode(y)}}},k={class:"page"},H={key:0};function L(o,t,s,l,e,n){const i=p("PageHeader"),d=p("EasyForm"),u=p("el-switch");return f(),m("div",k,[c(i),t[3]||(t[3]=a("div",{class:"tips"},[a("div",null,"纯前端解密不依赖网络，hans日志中不包含敏感信息"),a("div",null,"日志文件位于/data/oplus/os/bpm/history"),a("div",null,"相关代码来自com.android.server.hans.OplusHansHistoryManager")],-1)),c(d,{modelValue:e.formData,"onUpdate:modelValue":t[0]||(t[0]=r=>e.formData=r),fields:e.fields,buttons:e.buttons,"form-config":e.formConfig},null,8,["modelValue","fields","buttons","form-config"]),e.result?(f(),m("div",H,[t[2]||(t[2]=_(" 自动换行")),c(u,{modelValue:e.resultAutoLine,"onUpdate:modelValue":t[1]||(t[1]=r=>e.resultAutoLine=r)},null,8,["modelValue"])])):V("",!0),a("div",{class:"result",style:A({whiteSpace:e.resultAutoLine?"pre-wrap":"pre"})},v(e.result),5)])}const E=h(x,[["render",L],["__scopeId","data-v-f3a604de"]]);export{E as default};
